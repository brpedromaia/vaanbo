#!/bin/bash

### GLOBAL VARS
current_path="$( cd "$( dirname "$0" )" && pwd )"
playlist_path=$current_path/../playlists
vaanbo_path="$current_path/../.vaanbo"
etc_path="$vaanbo_path/etc"
ssh_path=$vaanbo_path/ssh
###

function applySshKeys
{
    if [ ! -d $ssh_path ];then
        rm -rf $ssh_path
        mkdir -p $ssh_path
        ssh-keygen -t rsa -b 4096 -f $ssh_path/vagrant -P "" &>/dev/null
        mv $ssh_path/vagrant $ssh_path/vagrant.pem
    fi
}

function genSshKeys
{
    rm -rf $ssh_path
    mkdir -p $ssh_path
    ssh-keygen -t rsa -b 4096 -f $ssh_path/vagrant -P "" &>/dev/null
    mv $ssh_path/vagrant $ssh_path/vagrant.pem
}

function genProvisionPlan
{
    local provision_plan_path=$vaanbo_path/plan
    mkdir -p $provision_plan_path
    ls -1 $playlist_path| sort | sed 's/^/- /g' >$provision_plan_path/provision-plan.yml
}

function config 
{
    vagrant hostmanager
    local arg=$1
    local machine=$1
    if [ "$arg" == "all" ];then machine="";fi
    vagrant ssh orchestrator -c "source /home/vagrant/.bashrc;vaanbo ansible apply $arg"
}

function provision 
{
    local arg=$1
    local machine=$1
    if [ "$arg" == "all" ];then machine="";fi
    mkdir -p $vaanbo_path
    applySshKeys
    genProvisionPlan
    vagrant up $machine
}

function reprovision 
{
    local arg=$1
    destroy $arg
    provision $arg
}

function destroy 
{
    local arg=$1
    local machine=$1
    if [ "$arg" == "all" ];then machine="";fi
    vagrant destroy -f $machine
}

function help
{
   printf "\nUsage: $0 [OPTIONS] COMMAND name"
   printf "\nOptions:"
   printf "\n-pl=<STRING>, --playlist=<STRING>          Define provision playlist folder"
   printf "\n-gssh, --generatessh                       Force sshkeys regeneration"
   printf "\n\nCommand: (Required)"
   printf "\nprovision                                  To provision machines from playlist on virtualbox"
   printf "\nreprovision                                To reprovision machines from playlist on virtualbox"
   printf "\ndestroy                                    To destroy machines from playlist on virtualbox"
   printf "\nopen                                       To access virtual machine by name"
   printf "\nconfig                                     To run playbook on vaanbo out of virtual machine"
   printf "\npc                                         To provision and run playbook automatically"
   printf "\nhelp                                       Print this usage."
   printf "\nversion                                    Print version information and quit"
   printf "\nNAME:"
   printf "\nfrom yml name for specific resource or all to use all resources"
   printf "\n"
}

cmd="help"
while [ $# -gt 0 ]; do
  case "$1" in
    -pl=*|--playlist=*)
        playlist_path="${1#*=}"
    ;;
    -gssh|--generatessh)
        genSshKeys
    ;;
    version)
        echo "vaanbo_vagrant v1.0";exit
    ;;
    config)
        cmd="$1 $2"
    ;;
    pc)
        provision $2
        cmd="config $2"
    ;;
    provision)
        cmd="$1 $2"
    ;;
    open)
        vagrant ssh $2
        exit
    ;;
    destroy)
        cmd="$1 $2"
    ;;
    reprovision)
        cmd="$1 $2"
    ;;
  esac
  shift
done

$cmd